<?php

/**
 * BaseGessehEtudiant
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $nom
 * @property string $prenom
 * @property integer $promo_id
 * @property integer $classement
 * @property string $email
 * @property string $token_mail
 * @property string $tel
 * @property date $naissance
 * @property boolean $anonyme
 * @property integer $utilisateur
 * @property GessehPromo $GessehPromo
 * @property sfGuardUser $sfGuardUser
 * @property Doctrine_Collection $GessehStage
 * @property Doctrine_Collection $GessehChoix
 * @property Doctrine_Collection $GessehSimulation
 * 
 * @method string              getNom()              Returns the current record's "nom" value
 * @method string              getPrenom()           Returns the current record's "prenom" value
 * @method integer             getPromoId()          Returns the current record's "promo_id" value
 * @method integer             getClassement()       Returns the current record's "classement" value
 * @method string              getEmail()            Returns the current record's "email" value
 * @method string              getTokenMail()        Returns the current record's "token_mail" value
 * @method string              getTel()              Returns the current record's "tel" value
 * @method date                getNaissance()        Returns the current record's "naissance" value
 * @method boolean             getAnonyme()          Returns the current record's "anonyme" value
 * @method integer             getUtilisateur()      Returns the current record's "utilisateur" value
 * @method GessehPromo         getGessehPromo()      Returns the current record's "GessehPromo" value
 * @method sfGuardUser         getSfGuardUser()      Returns the current record's "sfGuardUser" value
 * @method Doctrine_Collection getGessehStage()      Returns the current record's "GessehStage" collection
 * @method Doctrine_Collection getGessehChoix()      Returns the current record's "GessehChoix" collection
 * @method Doctrine_Collection getGessehSimulation() Returns the current record's "GessehSimulation" collection
 * @method GessehEtudiant      setNom()              Sets the current record's "nom" value
 * @method GessehEtudiant      setPrenom()           Sets the current record's "prenom" value
 * @method GessehEtudiant      setPromoId()          Sets the current record's "promo_id" value
 * @method GessehEtudiant      setClassement()       Sets the current record's "classement" value
 * @method GessehEtudiant      setEmail()            Sets the current record's "email" value
 * @method GessehEtudiant      setTokenMail()        Sets the current record's "token_mail" value
 * @method GessehEtudiant      setTel()              Sets the current record's "tel" value
 * @method GessehEtudiant      setNaissance()        Sets the current record's "naissance" value
 * @method GessehEtudiant      setAnonyme()          Sets the current record's "anonyme" value
 * @method GessehEtudiant      setUtilisateur()      Sets the current record's "utilisateur" value
 * @method GessehEtudiant      setGessehPromo()      Sets the current record's "GessehPromo" value
 * @method GessehEtudiant      setSfGuardUser()      Sets the current record's "sfGuardUser" value
 * @method GessehEtudiant      setGessehStage()      Sets the current record's "GessehStage" collection
 * @method GessehEtudiant      setGessehChoix()      Sets the current record's "GessehChoix" collection
 * @method GessehEtudiant      setGessehSimulation() Sets the current record's "GessehSimulation" collection
 * 
 * @package    gesseh
 * @subpackage model
 * @author     Pierre-FranÃ§ois Pilou Angrand <tmp@angrand.fr>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseGessehEtudiant extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('gesseh_etudiant');
        $this->hasColumn('nom', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('prenom', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('promo_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('classement', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('email', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('token_mail', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('tel', 'string', 14, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 14,
             ));
        $this->hasColumn('naissance', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));
        $this->hasColumn('anonyme', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('utilisateur', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('GessehPromo', array(
             'local' => 'promo_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser', array(
             'local' => 'utilisateur',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('GessehStage', array(
             'local' => 'id',
             'foreign' => 'etudiant_id'));

        $this->hasMany('GessehChoix', array(
             'local' => 'id',
             'foreign' => 'etudiant'));

        $this->hasMany('GessehSimulation', array(
             'local' => 'id',
             'foreign' => 'etudiant'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'disabled' => true,
             ),
             'updated' => 
             array(
              'format' => 'Y-m-d',
             ),
             ));
        $this->actAs($timestampable0);
    }
}