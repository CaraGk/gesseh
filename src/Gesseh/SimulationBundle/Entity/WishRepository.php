<?php

namespace Gesseh\SimulationBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * WishRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class WishRepository extends EntityRepository
{
  public function getWishStudentQuery($student_id)
  {
    return $this->createQueryBuilder('w')
                ->join('w.student', 's')
                ->where('s.id = :student')
                  ->setParameter('student', $student_id);
  }

  public function getWishQuery()
  {
    return $this->createQueryBuilder('w')
                ->join('w.student', 's')
                ->join('w.department', 'd')
                ->join('d.hospital', 'h')
                ->join('d.sector', 't')
                ->addSelect('s')
                ->addSelect('d')
                ->addSelect('h')
                ->addSelect('t');
  }

  public function getByStudent($student_id)
  {
    $query = $this->getWishQuery();
    $query->where('s.id = :student')
            ->setParameter('student', $student_id)
          ->addOrderBy('w.rank', 'asc');

    return $query->getQuery()->getResult();
  }

  public function findByStudentAndRank($student_id, $rank)
  {
    $query = $this->getWishStudentQuery($student_id);
    $query->andWhere('w.rank = :rank')
            ->setParameter('rank', $rank);

    return $query->getQuery()->getSingleResult();
  }

  public function findByStudentAndId($student_id, $id)
  {
    $query = $this->getWishStudentQuery($student_id);
    $query->andWhere('w.id = :id')
            ->setParameter('id', $id);

    return $query->getQuery()->getSingleResult();
  }

  public function findByRankAfter($student_id, $rank)
  {
    $query = $this->getWishStudentQuery($student_id);
    $query->andWhere('w.rank > :rank')
            ->setParameter('rank', $rank)
          ->addOrderBy('w.rank', 'asc');

    return $query->getQuery()->getResult();
  }

  public function getMaxRank($student_id)
  {
    $query = $this->getWishStudentQuery($student_id)
                  ->select('COUNT(w.id)');

    return $query->getQuery()->getSingleScalarResult();
  }

  public function getCountUser()
  {
    $dql = 'SELECT s.id, count(w.id) AS wishcount FROM GessehSimulationBundle:Wish w JOIN w.student s GROUP BY w.student';
    $results = $this->getEntityManager()->createQuery($dql)->getResult();

    foreach($results as $result) {
      $count_wish[$result['id']] = $result['wishcount'];
    }

    return $count_wish;
  }
}
